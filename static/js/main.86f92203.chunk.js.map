{"version":3,"sources":["fbase.js","routes/FindFriends.js","routes/Home.js","routes/SignIn.js","routes/SignUp.js","routes/SendMsgModal.js","routes/MsgModal.js","routes/InduceModal.js","routes/UserPage.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","authService","dbService","FindFriends","_useState","useState","_useState2","Object","slicedToArray","email","setEmail","history","useHistory","emailInputCheck","test","onSubmit","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","e","userInfo","_userInfo$docs$0$data","uid","wrap","_context","prev","next","preventDefault","abrupt","collection","where","get","sent","docs","length","data","push","concat","alert","t0","message","stop","_x","apply","this","arguments","react_default","createElement","className","onClick","goBack","name","type","placeholder","required","value","onChange","target","Home","userObj","Fragment","alt","src","SignIn","_useState3","_useState4","password","setPassword","_useState5","_useState6","setError","_e$target","_ref2","signInWithEmailAndPassword","user","passwordLengthCheck","SignUp","nickName","setNickName","_useState7","_useState8","passwordCheck","setPasswordCheck","_useState9","_useState10","passwordConfirmCheck","createUserWithEmailAndPassword","add","displayName","createdAt","Date","now","MsgModal","isMsgModalOpened","onClickToggleMsgModal","addMsgOnList","showInduceModal","msgText","setMsgText","selectedStarIndex","setSelectedStarIndex","msgObj","text","photo","posX","Math","floor","random","posY","localStorage","getItem","stopPropagation","maxLength","map","starIndex","id","key","style","fontSize","min","closeMsgModal","sameUser","date","getFullYear","InduceModal","onClickSignUp","closeInduceModal","UserPage","match","setUid","setDisplayName","setSameUser","msgList","setMsgList","setIsMsgModalOpened","_useState11","_useState12","isInduceModalOpened","setIsInduceModalOpened","_useState13","_useState14","displayMsgIndex","setDisplayMsgIndex","checkUid","_displayName","_uid","getMsgs","_ref3","_callee2","msgs","_context2","orderBy","doc","_x2","checkUidAndGetMsgs","_ref4","_callee3","_context3","_x3","useEffect","params","currentUser","onCopyUrl","_ref5","_callee4","textarea","_context4","document","getElementById","select","setSelectionRange","execCommand","url","location","href","msg","index","transform","onClickShowMsg","signOut","routes_SendMsgModal","toConsumableArray","setItem","src_routes_MsgModal","src_routes_InduceModal","AppRouter","isLoggedIn","react_router_dom","react_router","exact","path","src_routes_Home","routes_SignIn","routes_SignUp","src_routes_FindFriends","component","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","updateProfile","args","compactUserInfo","Router","ReactDOM","render","StrictMode","components_App"],"mappings":"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","file":"static/js/main.86f92203.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\n\r\nexport const dbService = firebase.firestore();\r\n\r\nexport const storageService = firebase.storage();\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { dbService } from \"../fbase\";\r\nimport \"./FindFriends.css\";\r\n\r\nconst FindFriends = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const emailInputCheck = () => {\r\n    const regEmail =\r\n      /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/;\r\n    if (email && !regEmail.test(email)) {\r\n      return \"invalid\";\r\n    }\r\n  };\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    setEmail(value);\r\n  };\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (emailInputCheck()) {\r\n      return;\r\n    }\r\n    try {\r\n      const userInfo = await dbService\r\n        .collection(\"userInfo\")\r\n        .where(\"email\", \"==\", email)\r\n        .get();\r\n      if (userInfo.docs.length > 0) {\r\n        const { uid } = userInfo.docs[0].data();\r\n        history.push(`/user/${uid}`);\r\n      } else {\r\n        alert(`${email}에 해당하는 사용자를 찾을 수 없습니다.`);\r\n      }\r\n    } catch (error) {\r\n      alert(error.message);\r\n    }\r\n  };\r\n  const onClickGoToHome = () => {\r\n    history.push(\"/\");\r\n  };\r\n  const onClickGoBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <div className=\"findfriend-container\">\r\n      <div className=\"btn-container\">\r\n        <button onClick={onClickGoToHome}>메인화면</button>\r\n        <button onClick={onClickGoBack}>뒤로</button>\r\n      </div>\r\n      <form className=\"signup-form\" onSubmit={onSubmit}>\r\n        <span className=\"input-text\">친구의 이메일</span>\r\n        <input\r\n          className={emailInputCheck()}\r\n          name=\"email\"\r\n          type=\"text\"\r\n          placeholder=\"\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n        />\r\n        <div className=\"warning-text\">\r\n          {email && emailInputCheck() && \"올바른 이메일 형식을 입력해주세요.\"}\r\n          {/* Please enter a valid email format. */}\r\n        </div>\r\n        <input className=\"main-button\" type=\"submit\" value=\"\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FindFriends;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./Home.css\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const history = useHistory();\r\n\r\n  const onClickMakeBtn = () => {\r\n    history.push(\"signup\");\r\n  };\r\n  const onClickGoToMyTree = () => {\r\n    if (userObj) {\r\n      history.push(`/user/${userObj.uid}`);\r\n    } else {\r\n      history.push(\"signin\");\r\n    }\r\n  };\r\n  const onClickFindFriend = () => {\r\n    history.push(\"/friend\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"home-container\">\r\n        <img className=\"main-text\" alt=\"\" src=\"img/main-msg.png\" />\r\n        <img className=\"main-img\" alt=\"\" src=\"img/main-icon.png\" />\r\n        <div className=\"main-text-container\">\r\n          2021년 힘든 한 해를 보낸 친구에게\r\n          <br />\r\n          따듯한 메세지를 남겨주세요.\r\n          <br />몇 광년 거리두기를 통해 안전하게 전달됩니다.\r\n        </div>\r\n      </div>\r\n      <div className=\"button-container\">\r\n        <button className=\"main-button\" onClick={onClickMakeBtn} />\r\n        <div className=\"mini-button-container\">\r\n          <button className=\"mini-button\" onClick={onClickGoToMyTree}>\r\n            내 행성으로\r\n          </button>\r\n          <button className=\"mini-button\" onClick={onClickFindFriend}>\r\n            친구 찾기\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Home;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { authService } from \"../fbase\";\r\nimport \"./SignIn.css\";\r\n\r\nfunction SignIn({ userObj }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { name, value },\r\n    } = e;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const data = await authService.signInWithEmailAndPassword(\r\n        email,\r\n        password\r\n      );\r\n      history.push(`/user/${data.user.uid}`);\r\n    } catch (error) {\r\n      alert(error.message);\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  // const onClick = () => {\r\n  //   history.push(\"/signup\");\r\n  // };\r\n\r\n  const emailInputCheck = () => {\r\n    const regEmail =\r\n      /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/;\r\n    if (!regEmail.test(email)) {\r\n      return \"invalid\";\r\n    }\r\n  };\r\n  const passwordLengthCheck = () => {\r\n    if (password.length < 6) {\r\n      return \"invalid\";\r\n    }\r\n  };\r\n  const onClickGoToHome = () => {\r\n    history.push(\"/\");\r\n  };\r\n  const onClickGoBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <div className=\"signin-container\">\r\n      <div className=\"btn-container\">\r\n        <button onClick={onClickGoToHome}>메인화면</button>\r\n        <button onClick={onClickGoBack}>뒤로</button>\r\n      </div>\r\n\r\n      <form className=\"signin-form\" onSubmit={onSubmit}>\r\n        <span className=\"input-text\">이메일</span>\r\n        <input\r\n          name=\"email\"\r\n          type=\"text\"\r\n          placeholder=\"\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n        />\r\n        <div className=\"warning-text\">\r\n          {email && emailInputCheck() && \"올바른 이메일 형식을 입력해주세요.\"}\r\n        </div>\r\n        <span className=\"input-text\">비밀번호</span>\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n        />\r\n        <div className=\"warning-text\">\r\n          {password &&\r\n            passwordLengthCheck() &&\r\n            \"비밀번호는 6자 이상 입력해주세요.\"}\r\n        </div>\r\n        <input className=\"main-button\" type=\"submit\" value=\"\" />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { authService, dbService } from \"../fbase\";\r\nimport \"./SignUp.css\";\r\n\r\nfunction SignUp({ userObj }) {\r\n  const [nickName, setNickName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordCheck, setPasswordCheck] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { name, value },\r\n    } = e;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    } else if (name === \"passwordCheck\") {\r\n      setPasswordCheck(value);\r\n    } else if (name === \"nickName\" && value.length < 15) {\r\n      setNickName(value);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (passwordLengthCheck() || emailInputCheck() || passwordConfirmCheck()) {\r\n      return;\r\n    }\r\n    try {\r\n      const data = await authService.createUserWithEmailAndPassword(\r\n        email,\r\n        password\r\n      );\r\n      const { uid } = data.user;\r\n      await dbService.collection(\"userInfo\").add({\r\n        uid: uid,\r\n        displayName: nickName,\r\n        createdAt: Date.now(),\r\n        email: email,\r\n      });\r\n      history.push(`/user/${uid}`);\r\n    } catch (error) {\r\n      alert(error.message);\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const emailInputCheck = () => {\r\n    const regEmail =\r\n      /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/;\r\n    if (email && !regEmail.test(email)) {\r\n      return \"invalid\";\r\n    }\r\n  };\r\n\r\n  const passwordLengthCheck = () => {\r\n    if (password && password.length < 6) {\r\n      return \"invalid\";\r\n    }\r\n  };\r\n\r\n  const passwordConfirmCheck = () => {\r\n    if (password !== passwordCheck) {\r\n      return \"invalid\";\r\n    }\r\n  };\r\n  const onClickGoToHome = () => {\r\n    history.push(\"/\");\r\n  };\r\n  const onClickGoBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <div className=\"signup-container\">\r\n      <div className=\"btn-container\">\r\n        <button onClick={onClickGoToHome}>메인화면</button>\r\n        <button onClick={onClickGoBack}>뒤로</button>\r\n      </div>\r\n      <div className=\"signup-text\">나의 행성 만들기</div>\r\n      <form className=\"signup-form\" onSubmit={onSubmit}>\r\n        <span className=\"input-text\">이름</span>\r\n        <input\r\n          name=\"nickName\"\r\n          type=\"text\"\r\n          placeholder=\"\"\r\n          required\r\n          value={nickName}\r\n          onChange={onChange}\r\n        />\r\n        <div className=\"warning-text\"></div>\r\n        <span className=\"input-text\">이메일</span>\r\n        <input\r\n          className={emailInputCheck()}\r\n          name=\"email\"\r\n          type=\"text\"\r\n          placeholder=\"\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n        />\r\n        <div className=\"warning-text\">\r\n          {email && emailInputCheck() && \"올바른 이메일 형식을 입력해주세요.\"}\r\n          {/* Please enter a valid email format. */}\r\n        </div>\r\n        <span className=\"input-text\">비밀번호</span>\r\n        <input\r\n          className={passwordLengthCheck()}\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n        />\r\n        <div className=\"warning-text\">\r\n          {password &&\r\n            passwordLengthCheck() &&\r\n            \"비밀번호는 6자 이상 입력해주세요.\"}\r\n          {/* Please enter a password of at least 6 characters. */}\r\n        </div>\r\n        <span className=\"input-text\">비밀번호 확인</span>\r\n        <input\r\n          className={passwordConfirmCheck()}\r\n          name=\"passwordCheck\"\r\n          type=\"password\"\r\n          placeholder=\"\"\r\n          required\r\n          value={passwordCheck}\r\n          onChange={onChange}\r\n        />\r\n        <div className=\"warning-text\">\r\n          {password &&\r\n            passwordCheck &&\r\n            passwordConfirmCheck() &&\r\n            \"비밀번호와 일치하지 않습니다.\"}\r\n          {/* Please enter the same password. */}\r\n        </div>\r\n        <input className=\"main-button\" type=\"submit\" value=\"\" />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { dbService } from \"../fbase\";\r\nimport \"./SendMsgModal.css\";\r\n\r\nconst MsgModal = ({\r\n  isMsgModalOpened,\r\n  onClickToggleMsgModal,\r\n  uid,\r\n  addMsgOnList,\r\n  showInduceModal,\r\n}) => {\r\n  const [nickName, setNickName] = useState(\"\");\r\n  const [msgText, setMsgText] = useState(\"\");\r\n  const [selectedStarIndex, setSelectedStarIndex] = useState(0);\r\n  const history = useHistory();\r\n\r\n  const onClickGoToHome = () => {\r\n    history.push(\"/\");\r\n  };\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const msgObj = {\r\n      uid: uid,\r\n      nickName: nickName,\r\n      text: msgText,\r\n      photo: selectedStarIndex,\r\n      posX: 36 * Math.floor(Math.random() * 11) - 200,\r\n      posY: 45 * Math.floor(Math.random() * 11) + 50,\r\n      createdAt: Date.now(),\r\n    };\r\n    await dbService.collection(\"message\").add(msgObj);\r\n    setMsgText(\"\");\r\n    setNickName(\"\");\r\n    addMsgOnList(msgObj);\r\n    onClickToggleMsgModal();\r\n    const isUserSawInduceModal = localStorage.getItem(\"sawInduceModal\");\r\n    if (isUserSawInduceModal !== \"true\") {\r\n      showInduceModal();\r\n    }\r\n  };\r\n  const onChangeMsgText = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    setMsgText(value);\r\n  };\r\n  const onChangeNickName = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    if (value.length < 10) setNickName(value);\r\n  };\r\n\r\n  const onClickSelectStar = (index) => {\r\n    setSelectedStarIndex(index);\r\n  };\r\n\r\n  const getStarSize = () => {\r\n    return `${Math.min(75, msgText.length + 25)}px`;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`msgmodal-wrapper ${isMsgModalOpened ? \"opened\" : \"closed\"}`}\r\n    >\r\n      <div\r\n        className=\"msgmodal-container\"\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n        }}\r\n      >\r\n        <div className=\"btn-container\">\r\n          <button onClick={onClickGoToHome}>메인화면</button>\r\n          <button onClick={onClickToggleMsgModal}>뒤로</button>\r\n        </div>\r\n\r\n        <form className=\"msg-form\" onSubmit={onSubmit}>\r\n          <span className=\"input-text\">보내는 사람</span>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            maxLength={20}\r\n            onChange={onChangeNickName}\r\n            required\r\n            value={nickName}\r\n          />\r\n          <span className=\"input-text\">남길 메세지</span>\r\n          <textarea\r\n            type=\"text\"\r\n            placeholder=\"글자 수에 따라 별이 커집니다.\"\r\n            maxLength={200}\r\n            onChange={onChangeMsgText}\r\n            required\r\n            value={msgText}\r\n          />\r\n          <div className=\"msglen-counter\">{`${msgText.length}/200`}</div>\r\n\r\n          <span className=\"input-text selectstar\">별 고르기</span>\r\n          <div className=\"select-star-container\">\r\n            {[0, 1, 2, 3, 4].map((starIndex) => {\r\n              return (\r\n                <div\r\n                  id={`star-${starIndex}`}\r\n                  className=\"star-container\"\r\n                  key={starIndex}\r\n                >\r\n                  <span\r\n                    className=\"star\"\r\n                    onClick={() => {\r\n                      onClickSelectStar(starIndex);\r\n                    }}\r\n                    style={{\r\n                      fontSize: `${getStarSize()}`,\r\n                    }}\r\n                  >\r\n                    *\r\n                  </span>\r\n                  <div\r\n                    className={`${\r\n                      starIndex === selectedStarIndex ? \"display\" : \"hidden\"\r\n                    }`}\r\n                  >\r\n                    <img className=\"star-img\" alt=\"\" src=\"img/arrow.png\" />\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <input className=\"submit-button\" type=\"submit\" value=\"\" />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MsgModal;\r\n","import React from \"react\";\r\nimport \"./MsgModal.css\";\r\n\r\nconst MsgModal = ({ msgObj, closeMsgModal, sameUser }) => {\r\n  const { photo, text, nickName } = msgObj;\r\n  const getStarSize = (msgText) => {\r\n    return `${Math.min(50, msgText.length) + 20}px`;\r\n  };\r\n  const date = new Date();\r\n  const closeModal = () => {\r\n    closeMsgModal();\r\n  };\r\n  return (\r\n    <div className=\"msg-wrapper\" onClick={closeModal}>\r\n      <div className=\"msg-container\" onClick={(e) => e.stopPropagation()}>\r\n        <div className=\"star-container\">\r\n          <div\r\n            className=\"msg-star\"\r\n            id={`display-star-${photo}`}\r\n            style={{\r\n              fontSize: `${getStarSize(text)}`,\r\n            }}\r\n          >\r\n            *\r\n          </div>\r\n        </div>\r\n        <div className=\"msg-nickname\">\r\n          보낸사람: <span>{nickName}</span>\r\n        </div>\r\n        <div className=\"msg-text\">\r\n          {/* {sameUser */}\r\n          {date.getFullYear() && sameUser > 2021\r\n            ? text\r\n            : \"메세지는 2022년에 전달됩니다.\"}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MsgModal;\r\n","import React from \"react\";\r\nimport \"./InduceModal.css\";\r\n\r\nconst InduceModal = ({ onClickSignUp, closeInduceModal }) => {\r\n  return (\r\n    <div className=\"inducemodal-wrapper\" onClick={closeInduceModal}>\r\n      <div className=\"inducemodal-container\">\r\n        <div className=\"iducemodal-text-container\">\r\n          <div className=\"iducemodal-text\">\r\n            메세지가 성공적으로 전달되었습니다!\r\n          </div>\r\n          나만의 행성을 만들고 <br />\r\n          친구들로부터 메세지를 받아보세요.\r\n        </div>\r\n\r\n        <button\r\n          className=\"main-button\"\r\n          onClick={(e) => {\r\n            onClickSignUp();\r\n            e.preventDefault();\r\n          }}\r\n        />\r\n        <div className=\"iducemodal-close-btn\">닫기</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InduceModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { authService, dbService } from \"../fbase\";\r\nimport SendMsgModal from \"./SendMsgModal\";\r\nimport MsgModal from \"./MsgModal\";\r\nimport \"./UserPage.css\";\r\nimport InduceModal from \"./InduceModal\";\r\n\r\nconst UserPage = ({ match }) => {\r\n  const [uid, setUid] = useState(\"\");\r\n  const [displayName, setDisplayName] = useState(\"\");\r\n  const [sameUser, setSameUser] = useState(false);\r\n  const [msgList, setMsgList] = useState([]);\r\n  const [isMsgModalOpened, setIsMsgModalOpened] = useState(false);\r\n  const [isInduceModalOpened, setIsInduceModalOpened] = useState(false);\r\n  const [displayMsgIndex, setDisplayMsgIndex] = useState(null);\r\n  const history = useHistory();\r\n\r\n  const addMsgOnList = (msgObj) => {\r\n    setMsgList((prev) => [...prev, msgObj]);\r\n  };\r\n\r\n  const checkUid = async (uid) => {\r\n    const userInfo = await dbService\r\n      .collection(\"userInfo\")\r\n      .where(\"uid\", \"==\", uid)\r\n      .get();\r\n    if (userInfo.docs.length > 0) {\r\n      const { displayName, uid } = userInfo.docs[0].data();\r\n      setUid(uid);\r\n      setDisplayName(displayName);\r\n      return true;\r\n    } else {\r\n      alert(\"잘못된 접근입니다.\");\r\n      history.push(\"/\");\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const getMsgs = async (uid) => {\r\n    const msgs = await dbService\r\n      .collection(\"message\")\r\n      .where(\"uid\", \"==\", uid)\r\n      .orderBy(\"createdAt\")\r\n      .get();\r\n    setMsgList(msgs.docs.map((doc) => doc.data()));\r\n  };\r\n\r\n  const checkUidAndGetMsgs = async (uid) => {\r\n    if (checkUid(uid)) {\r\n      getMsgs(uid);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const uid = match.params.id;\r\n    checkUidAndGetMsgs(uid);\r\n    if (authService.currentUser && uid === authService.currentUser.uid) {\r\n      setSameUser(true);\r\n    }\r\n  }, []);\r\n\r\n  const onClickSignUp = () => {\r\n    history.push(\"/signup\");\r\n  };\r\n\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const onClickToggleMsgModal = () => {\r\n    setIsMsgModalOpened((prev) => !prev);\r\n  };\r\n  const getStarSize = (msgText) => {\r\n    return `${Math.min(50, msgText.length) + 10}px`;\r\n  };\r\n\r\n  const onClickShowMsg = (index) => {\r\n    setDisplayMsgIndex(index);\r\n  };\r\n  const onClickGoToHome = () => {\r\n    history.push(\"/\");\r\n  };\r\n  const onClickGoBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  const onCopyUrl = async () => {\r\n    const textarea = document.getElementById(\"textarea\");\r\n    textarea.select();\r\n    textarea.setSelectionRange(0, 9999);\r\n    document.execCommand(\"copy\");\r\n    textarea.setSelectionRange(0, 0);\r\n\r\n    // await navigator.clipboard.writeText(link);\r\n    alert(\r\n      \"링크가 복사되었습니다. \\nSNS를 통해 친구들에게 링크를 공유해주세요.\"\r\n    );\r\n  };\r\n\r\n  const closeMsgModal = () => {\r\n    setDisplayMsgIndex(null);\r\n  };\r\n  const url = document.location.href;\r\n\r\n  const showInduceModal = () => {\r\n    setIsInduceModalOpened(true);\r\n    localStorage.setItem(\"sawInduceModal\", \"true\");\r\n  };\r\n\r\n  const closeInduceModal = () => {\r\n    setIsInduceModalOpened(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"userpage-container\">\r\n      {!isMsgModalOpened && (\r\n        <>\r\n          <div className=\"btn-container\">\r\n            <button onClick={onClickGoToHome}>메인화면</button>\r\n            <button onClick={onClickGoBack}>뒤로</button>\r\n          </div>\r\n          <div className=\"star-display-container\">\r\n            {msgList.map((msg, index) => {\r\n              const { createdAt, photo, text, posX, posY } = msg;\r\n              return (\r\n                <div\r\n                  className=\"display-star\"\r\n                  key={createdAt}\r\n                  id={`display-star-${photo}`}\r\n                  style={{\r\n                    transform: `translate(${posX}px,${posY}px)`,\r\n                  }}\r\n                >\r\n                  <div\r\n                    className=\"star\"\r\n                    id={index}\r\n                    style={{\r\n                      fontSize: `${getStarSize(text)}`,\r\n                    }}\r\n                    onClick={() => {\r\n                      onClickShowMsg(index);\r\n                    }}\r\n                  >\r\n                    *\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div>\r\n            {displayName}님 행성에 {msgList.length}개의 메세지가 도착했습니다.\r\n          </div>\r\n          <div className=\"userpage-btn-container\">\r\n            {sameUser ? (\r\n              <>\r\n                <button className=\"copy-url-button\" onClick={onCopyUrl} />\r\n                <button onClick={onLogOutClick}>log out</button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <button\r\n                  className=\"send-msg-button\"\r\n                  onClick={onClickToggleMsgModal}\r\n                />\r\n                <button className=\"mini-button\" onClick={onClickSignUp}>\r\n                  내 행성 만들기\r\n                </button>\r\n              </>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n      <SendMsgModal\r\n        addMsgOnList={addMsgOnList}\r\n        isMsgModalOpened={isMsgModalOpened}\r\n        onClickToggleMsgModal={onClickToggleMsgModal}\r\n        uid={uid}\r\n        showInduceModal={showInduceModal}\r\n      />\r\n      {displayMsgIndex !== null && (\r\n        <MsgModal\r\n          msgObj={msgList[displayMsgIndex]}\r\n          closeMsgModal={closeMsgModal}\r\n          sameUser={sameUser}\r\n        />\r\n      )}\r\n      {isInduceModalOpened && (\r\n        <InduceModal\r\n          onClickSignUp={onClickSignUp}\r\n          closeInduceModal={closeInduceModal}\r\n        />\r\n      )}\r\n      <img className=\"person-planet\" alt=\"\" src=\"img/main-icon.png\" />\r\n      <textarea id=\"textarea\" value={url} onChange={() => {}}></textarea>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPage;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport FindFriends from \"../routes/FindFriends\";\r\nimport Home from \"../routes/Home\";\r\nimport SignIn from \"../routes/SignIn\";\r\nimport SignUp from \"../routes/SignUp\";\r\nimport UserPage from \"../routes/UserPage\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Home userObj={userObj} />\r\n        </Route>\r\n        <Route exact path=\"/signin\">\r\n          <SignIn userObj={userObj} />\r\n        </Route>\r\n        <Route exact path=\"/signup\">\r\n          <SignUp userObj={userObj} />\r\n        </Route>\r\n        <Route exact path=\"/friend\">\r\n          <FindFriends />\r\n        </Route>\r\n        <Route path=\"/user/:id\" component={UserPage} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"./Router\";\nimport { authService } from \"../fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  const compactUserInfo = (user) => {\n    return {\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    };\n  };\n\n  const updateAuthInfo = () => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(true);\n        setUserObj(compactUserInfo(user));\n      } else {\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n  };\n\n  useEffect(() => {\n    updateAuthInfo();\n  }, []);\n\n  if (init) {\n    return (\n      <div className=\"app-container\">\n        <AppRouter userObj={userObj} isLoggedIn={isLoggedIn} />\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"loading-container\">\n        <img className=\"main-img\" alt=\"\" src=\"img/main-icon.png\" />\n        <span>loading...</span>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}